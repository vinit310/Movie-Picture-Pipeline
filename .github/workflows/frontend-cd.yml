name: Frontend Continous Deployment

on:
  push:
    branches:
      - main

  workflow_dispatch:    

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run lint
        run: npm run lint
        working-directory: starter/frontend

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 
          uses: actions/setup-node@v3
          with:
            node-version: 18
            cache: 'npm'
            cache-dependency-path: starter/frontend/package-lock.json
        
      - name: Install dependencies
          run: npm ci
          working-directory: starter/frontend
  
      - name: Run test
          run: npm run test
          working-directory: starter/frontend  
  
  build:
    runs-on: ubuntu-latest
    needs: [lint,test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 
          uses: actions/setup-node@v3
          with:
            node-version: 18
            cache: 'npm'
            cache-dependency-path: starter/frontend/package-lock.json
        
      - name: Install dependencies
          run: npm ci
          working-directory: starter/frontend
  
      - name: Configure AWS Credentials
        # Take reference from Practice: Secrets 4.9 lecture no
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
            aws-region: us-east-1
  
      - name: Login to Amazon ECR
        # Source from https://github.com/marketplace/actions/amazon-ecr-login-action-for-github-actions
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2   
  
      - name: Build  push docker image to Amazon ECR
          env:
            REPOSITORY: frontend
            IMAGE_TAG: latest
            REGISTRY: 220611530126.dkr.ecr.us-east-1.amazonaws.com
          run: |
            docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG   
          working-directory: starter/frontend    

      - name: Config kubect to use EKS closter
          run: |
            aws eks update-kubeconfig --name cluster    

      - name: Deploying to Kubernatives
        # Source from Step 4: Frontend Development Notes
          env:
            REPOSITORY: frontend
            IMAGE_TAG: latest
            REGISTRY: 220611530126.dkr.ecr.us-east-1.amazonaws.com
          run: |
            kustomize edit set image frontend=$REGISTRY/$REPOSITORY:$IMAGE_TAG
            kustomize build | kubectl apply -f -
          working-directory: starter/frontend/k8s      
          
         